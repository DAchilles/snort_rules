alert tcp any any -> any $HTTP_PORTS (msg:"SQL HTTP URI blind injection attempt"; flow:to_server,established; content:"sleep("; fast_pattern:only; http_uri; content:"/"; http_uri; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; classtype:web-application-attack; sid:49666; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL use of sleep function with and - likely SQL injection"; flow:to_server,established; content:"AND "; nocase; http_uri; content:"SLEEP|28|"; within:100; nocase; http_uri; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.owasp.org/index.php/Blind_SQL_Injection; classtype:web-application-attack; sid:41449; rev:2;)
alert tcp any any -> any $HTTP_PORTS (msg:"SQL use of sleep function in HTTP header - likely SQL injection attempt"; flow:established,to_server; content:"User-Agent|3A| "; http_header; content:"sleep("; fast_pattern; nocase; http_header; pcre:"/User-Agent\x3A\x20[^\r\n]*sleep\x28/Hi"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, ruleset community, service http; reference:url,blog.cloudflare.com/the-sleepy-user-agent/; classtype:web-application-attack; sid:38993; rev:9;)
# alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:"SQL Oracle e-Business Suite JTF_BISUTILITY_PUB SQL injection attempt"; flow:to_server,established; content:"/EBS/jtf_bisutility_pub.lov_values?"; fast_pattern:only; nocase; content:"p_where_clause="; nocase; http_uri; metadata:policy max-detect-ips drop, service http; reference:cve,2016-0515; classtype:web-application-attack; sid:37648; rev:2;)
# alert tcp $HOME_NET any -> $EXTERNAL_NET $HTTP_PORTS (msg:"SQL Oracle e-Business Suite ORACLESSWA SQL injection attempt"; flow:to_server,established; content:"EBSPROD/OracleSSWA.Execute?"; fast_pattern:only; content:"E="; nocase; http_uri; content:"P={!76EF7B870B1E3806"; nocase; http_uri; metadata:policy max-detect-ips drop, service http; reference:cve,2016-0589; classtype:web-application-attack; sid:37643; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL use of sleep function with select - likely SQL injection"; flow:to_server,established; content:"SELECT "; nocase; http_uri; content:"SLEEP|28|"; within:100; nocase; http_uri; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.owasp.org/index.php/Blind_SQL_Injection; classtype:web-application-attack; sid:37443; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL union select - possible percent-delimited SQL injection attempt - GET parameter"; flow:to_server,established; content:"%u%n%i%o%n%"; nocase; http_raw_uri; content:"%s%e%l%e%c%t"; nocase; http_raw_uri; content:"%s%e%l%e%c%t"; fast_pattern:only; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:bugtraq,21227; reference:cve,2006-2835; reference:cve,2006-6268; reference:cve,2007-1021; reference:cve,2007-2824; reference:cve,2011-1667; reference:url,www.securityfocus.com/archive/1/452259; classtype:misc-attack; sid:35819; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL Lblog possible sql injection attempt - GET parameter"; flow:to_server,established; content:"/blog/comments.asp?id="; fast_pattern:only; http_uri; content:"union"; nocase; http_uri; content:"select"; nocase; http_uri; pcre:"/union\s+(all\s+)?select\s+/Ui"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:cve,2006-4284; reference:url,attack.mitre.org/techniques/T1190; classtype:misc-attack; sid:34295; rev:3;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL PK-CMS SQL injection attempt"; flow:to_server,established; content:"/default.asp?"; fast_pattern; nocase; http_uri; content:"pagina="; distance:0; http_uri; pcre:"/pagina=[^&]*\x27/Ui"; metadata:policy max-detect-ips drop, service http; reference:url,github.com/BuddhaLabs/PacketStorm-Exploits/blob/master/1309-exploits/pkcms-sql.txt; classtype:web-application-attack; sid:32768; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL Drupal 7 pre auth SQL injection attempt"; flow:to_server,established; content:"insert"; nocase; http_client_body; content:"into"; within:10; nocase; http_client_body; content:"form_id=user_login_block"; fast_pattern:only; http_client_body; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:cve,2014-3704; reference:url,www.drupal.org/SA-CORE-2014-005; classtype:web-application-attack; sid:32353; rev:5;)
alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 1 - possible sql injection attempt"; flow:to_server,established; content:"%271%27%3D%271"; fast_pattern:only; http_client_body; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:30041; rev:4;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 1 - possible sql injection attempt"; flow:to_server,established; content:"1%3D1"; fast_pattern:only; http_client_body; pcre:"/or\++1%3D1/Pi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:30040; rev:5;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS [$HTTP_PORTS,443,8443] (msg:"SQL McAfee ePolicy Orchestrator timing based SQL injection attempt"; flow:to_server,established; content:"/EPOAGENTMETA"; nocase; http_uri; content:"/DisplayMSAPropsDetail.do?"; within:30; nocase; http_uri; content:"uid="; within:4; nocase; http_uri; pcre:"/uid=\s?\D{1,3}/Ui"; metadata:policy max-detect-ips drop, policy security-ips drop, service http, service ssl; reference:bugtraq,59500; reference:cve,2013-0140; reference:url,funoverip.net/2013/06/mcafee-epolicy-0wner-preview/; classtype:attempted-admin; sid:27724; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS [$HTTP_PORTS,443,8443] (msg:"SQL McAfee ePolicy Orchestrator timing based SQL injection attempt"; flow:to_server,established; content:"/core"; nocase; http_uri; content:"/showRegisteredTypeDetails.do?"; within:34; nocase; http_uri; content:"uid="; within:4; nocase; http_uri; pcre:"/uid=\s?\D{1,3}/Ui"; metadata:policy max-detect-ips drop, service http, service ssl; reference:bugtraq,59500; reference:cve,2013-0140; reference:url,funoverip.net/2013/06/mcafee-epolicy-0wner-preview/; classtype:attempted-admin; sid:27723; rev:2;)
alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 1 - possible sql injection attempt"; flow:to_server,established; content:"|27|1|27|=|27|1"; fast_pattern:only; http_client_body; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:27288; rev:5;)
alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 1 - possible sql injection attempt"; flow:to_server,established; content:"1=1"; fast_pattern:only; http_client_body; pcre:"/or[\s\x2f\x2A]+1=1/Pi"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:27287; rev:5;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL generic convert injection attempt - GET parameter"; flow:to_server,established; content:"convert|28|"; fast_pattern:only; http_uri; metadata:policy max-detect-ips drop, policy security-ips drop, ruleset community, service http; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:26925; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql update injection attempt - POST parameter"; flow:to_server,established; content:"update%20"; fast_pattern:only; http_client_body; content:"set"; nocase; http_client_body; pcre:"/update%20[^&\n+]+?(%20|\+)set(%20|\+)/Pi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,msdn.microsoft.com/en-us/library/ms161953.aspx; classtype:web-application-attack; sid:26829; rev:3;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL use of concat function with select - likely SQL injection"; flow:to_server,established; content:"SELECT "; nocase; http_uri; content:"CONCAT|28|"; within:100; nocase; http_uri; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:24172; rev:2;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL IBM System Storage DS storage manager profiler sql injection attempt"; flow:to_server,established; content:"ModuleServlet?DeviceId=1&state=state_viewmodulelog&selectedModuleOnly=1"; fast_pattern; http_uri; content:"&selectedModule=1"; nocase; http_uri; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:bugtraq,54112; reference:cve,2012-2171; reference:url,attack.mitre.org/techniques/T1190; reference:url,www.zeroscience.mk/codes/ibmssdssmp_sqlixss.txt; classtype:web-application-attack; sid:23947; rev:3;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL Ruby on rails SQL injection attempt"; flow:established,to_server; content:"]]="; fast_pattern:only; http_uri; pcre:"/\?\w.*?\[\w.*?\[\w.*?\]\]=/smiU"; metadata:policy max-detect-ips drop, service http; reference:cve,2012-2695; classtype:web-application-attack; sid:23213; rev:6;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL or kic = kic - known SQL injection routine"; flow:to_server,established; content:"%18%20%4f%52%20%18%6b%69%63%19%20%3d%20%18%6b%69%63"; fast_pattern:only; http_client_body; metadata:policy max-detect-ips drop, service http; classtype:web-application-attack; sid:21789; rev:6;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL or kic = kic - known SQL injection routine"; flow:to_server,established; content:"%20OR%20|27|kic|27|%20=%20|27|kic"; fast_pattern:only; http_client_body; metadata:policy max-detect-ips drop, service http; classtype:web-application-attack; sid:21788; rev:6;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL parameter ending in encoded comment characters - possible sql injection attempt - POST"; flow:to_server,established; content:"%2D%2D"; fast_pattern:only; http_client_body; pcre:"/(%53%45%4C%45%43%54|%55%50%44%41%54%45|%49%4E%53%45%52%54|%73%65%6C%65%63%74|%75%70%64%61%74%65|%69%6E%73%65%72%74)(%20)+[^\r\n\x26]+%2D%2D/Pi"; metadata:policy max-detect-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:21779; rev:6;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL parameter ending in comment characters - possible sql injection attempt - POST"; flow:to_server,established; content:"--"; fast_pattern:only; http_client_body; pcre:"/(SELECT|UPDATE|INSERT|%53%45%4C%45%43%54|%55%50%44%41%54%45|%49%4E%53%45%52%54)(%20)+[^\r\n\x26]+--(\x26|$)/Pi"; metadata:policy max-detect-ips drop, policy security-ips alert, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:21778; rev:7;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL waitfor delay function in POST - possible SQL injection attempt"; flow:to_server,established; content:"waitfor"; nocase; http_client_body; content:"delay"; distance:0; nocase; http_client_body; pcre:"/waitfor%20+delay/Pi"; metadata:policy max-detect-ips drop, service http; reference:url,www.owasp.org/index.php/Blind_SQL_Injection; classtype:web-application-attack; sid:21777; rev:4;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 1 - possible sql injection attempt"; flow:to_server,established; content:"|27|1|27|=|27|1"; fast_pattern:only; http_uri; metadata:policy max-detect-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:20047; rev:7;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL PHPSESSID SQL injection attempt"; flow:to_server,established; content:"PHPSESSID="; nocase; content:"|22|"; distance:0; nocase; pcre:"/PHPSESSID=[^\r\n\x26\x3B]*?\x22[^\x22\x3B]/Ci"; metadata:policy max-detect-ips drop, service http; classtype:web-application-attack; sid:20046; rev:7;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL PHPSESSID SQL injection attempt"; flow:to_server,established; content:"PHPSESSID="; nocase; content:"|27|"; distance:0; nocase; pcre:"/PHPSESSID=[^\r\n\x26\x3B]*?\x27[^\x27]/Ci"; metadata:policy max-detect-ips drop, service http; classtype:web-application-attack; sid:20045; rev:6;)
alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 0 - possible sql injection attempt"; flow:to_server,established; content:"1=0"; fast_pattern:only; http_uri; pcre:"/(and|or)[\s\x2F\x2A]+1=0/Ui"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:19440; rev:10;)
alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL 1 = 1 - possible sql injection attempt"; flow:to_server,established; content:"1=1"; fast_pattern:only; http_uri; pcre:"/(and|or)[\s\x2f\x2A]+1=1/Ui"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:19439; rev:10;)
alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL url ending in comment characters - possible sql injection attempt"; flow:to_server,established; content:"--"; fast_pattern:only; http_uri; pcre:"/(SELECT|UPDATE|INSERT)\x20+[^\r\n\x26]+--$/Ui"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:cve,2012-2998; reference:url,attack.mitre.org/techniques/T1190; reference:url,ferruh.mavituna.com/sql-injection-cheatsheet-oku/; classtype:web-application-attack; sid:19438; rev:14;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL declare varchar - possible SQL injection attempt"; flow:to_server,established; content:"declare"; nocase; http_uri; content:"varchar"; distance:0; nocase; http_uri; pcre:"/declare\s+\@[A-Z\d]+\s+varchar/Ui"; metadata:policy max-detect-ips drop, service http; reference:url,msdn.microsoft.com/en-us/library/ms161953.aspx; classtype:web-application-attack; sid:19202; rev:8;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL waitfor delay function - possible SQL injection attempt"; flow:to_server,established; content:"waitfor"; nocase; http_uri; content:"delay"; distance:0; nocase; http_uri; pcre:"/waitfor\s+delay/Ui"; metadata:policy max-detect-ips drop, service http; reference:cve,2012-2998; reference:url,www.owasp.org/index.php/Blind_SQL_Injection; classtype:web-application-attack; sid:19201; rev:9;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET [9090,9091] (msg:"SQL Jive Software Openfire Jabber Server SQL injection attempt"; flow:to_server, established; content:"sipark-log-summary.j"; nocase; http_uri; pcre:"/sipark-log-summary\.jsp\?(username|numa(a|b)|type)[^\s]*\s/Umi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:bugtraq,32189; reference:cve,2008-6508; reference:cve,2008-6509; reference:cve,2008-6510; classtype:attempted-user; sid:16513; rev:4;)
alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql with comments injection attempt - GET parameter"; flow:to_server,established; content:"/*"; http_uri; content:"*/"; http_uri; pcre:"/(update|exec|insert|union)[^\/\\]*\/\*.*\*\//Uis"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:16431; rev:6;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql exec injection attempt - POST parameter"; flow:to_server,established; content:"exec "; fast_pattern; nocase; http_client_body; content:"master"; nocase; http_client_body; pcre:"/exec\s+master/Pi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:15877; rev:10;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql update injection attempt - POST parameter"; flow:to_server,established; content:"update+"; fast_pattern:only; http_client_body; content:"set"; nocase; http_client_body; pcre:"/update\+[^&\n+]+?(%20|\+)set(%20|\+)/Pi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,msdn.microsoft.com/en-us/library/ms161953.aspx; classtype:web-application-attack; sid:15876; rev:13;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql insert injection attempt - POST parameter"; flow:to_server,established; content:"insert "; fast_pattern:only; http_client_body; pcre:"/insert\s+into\s+[^\/\\]+/Pi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:15875; rev:12;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL union select - possible sql injection attempt - POST parameter"; flow:to_server,established; content:"union"; fast_pattern:only; http_client_body; content:"select"; nocase; http_client_body; pcre:"/union(%20|\+)+(all(%20|\+)+)?select(%20|\+)/Pi"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; classtype:misc-attack; sid:15874; rev:14;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL char and sysobjects - possible sql injection recon attempt"; flow:to_server,established; content:"CHAR|28|"; nocase; http_uri; content:"CHAR|28|"; distance:0; nocase; http_uri; content:"CHAR|28|"; distance:0; nocase; http_uri; content:"[sysobjects]"; distance:0; nocase; http_uri; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,attack.mitre.org/techniques/T1190; reference:url,isc.sans.org/diary.html?storyid=3823; classtype:web-application-attack; sid:15584; rev:9;)
# alert tcp $EXTERNAL_NET any -> $HOME_NET $HTTP_PORTS (msg:"SQL union select - possible sql injection attempt - GET parameter"; flow:to_server,established; content:"union"; fast_pattern:only; http_uri; content:"select"; nocase; http_uri; pcre:"/union\s+(all\s+)?select\s+/Ui"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:bugtraq,14876; reference:bugtraq,21227; reference:bugtraq,22582; reference:bugtraq,24067; reference:cve,2005-3004; reference:cve,2006-0065; reference:cve,2006-0154; reference:cve,2006-2835; reference:cve,2006-6268; reference:cve,2007-1021; reference:cve,2007-2824; reference:cve,2011-1667; reference:cve,2020-17506; reference:url,attack.mitre.org/techniques/T1190; classtype:misc-attack; sid:13990; rev:27;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql update injection attempt - GET parameter"; flow:to_server,established; content:"update"; fast_pattern:only; http_uri; pcre:"/update\s+[^\/\\]+set\s+[^\/\\]+/Ui"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:13514; rev:17;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql insert injection attempt - GET parameter"; flow:to_server,established; content:"insert"; fast_pattern:only; http_uri; pcre:"/insert\s+into\s+[^\/\\]+/Ui"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:cve,2012-2998; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:13513; rev:19;)
# alert tcp $EXTERNAL_NET any -> $HTTP_SERVERS $HTTP_PORTS (msg:"SQL generic sql exec injection attempt - GET parameter"; flow:to_server,established; content:"exec"; fast_pattern:only; http_uri; pcre:"/exec\s+master/Ui"; metadata:policy max-detect-ips drop, policy security-ips drop, service http; reference:url,www.securiteam.com/securityreviews/5DP0N1P76E.html; classtype:web-application-attack; sid:13512; rev:15;)
alert tcp $EXTERNAL_NET any -> $SQL_SERVERS 7210 (msg:"SQL SAP MaxDB shell command injection attempt"; flow:to_server,established; content:"exec_sdbinfo"; fast_pattern:only; pcre:"/exec_sdbinfo\s+[\x26\x3b\x7c\x3e\x3c]/i"; metadata:policy balanced-ips drop, policy max-detect-ips drop, policy security-ips drop; reference:bugtraq,27206; reference:cve,2008-0244; classtype:attempted-admin; sid:13356; rev:7;)
